version: 2.1
executors:
  node_executor:
    docker:
      - image: circleci/node:14-buster
        auth:
          username: $DOCKER_USER_RO
          password: $DOCKER_PASSWORD_RO

jobs:
  # Fake extract step, file is already in the repos
  extractAPISpec:
    executor: node_executor
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./docs/openapi.json

  publishAPIDoc:
    executor: node_executor
    steps:
      # This job requires that we checkout current branch first to have all the repos.
      # it will not be used directly as we have the saved workspace
      # but will enable to checkout gh-pages branch.
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: checkout gh pages branch and copy files from workspace
          command: |
            # publishing happens by pushing files to gh-pages branch
            # retrieve branch to publish to from Circle CI env vars and fallback on the real gh-pages
            # if no var for a test or alternative branch defined.
            [ -n "$GH_PAGES_BRANCH_OVERRIDE" ] && readonly BRANCH="$GH_PAGES_BRANCH_OVERRIDE" || readonly BRANCH='gh-pages'

            # switch to the publishing branch
            git checkout "$BRANCH"

            # copy the content of the docs folder built on the previous job and attached
            # using workspace on temp location
            # cp with T option to override existing content, specially usefull for latest
            cp -aT /tmp/workspace/docs/. .

            # add a readme to make sure devs understand that this publishing branch is generated
            # by CI (use template readme), mv replaces the current readme that is only for source dir
            mv TARGET_README.md README.md
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm ci
      - save_cache:
          paths:
            - ~/.npm
          key: node-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Generate API doc site files
          command: |
            npm run generate-versions -- --spec=openapi.json --tag=${CIRCLE_TAG}
      - run:
          name: Clean gh-pages branch
          command: |
            # remove files used to build the doc version but it's not usefull to have them in
            # the final gh-pages branch
            rm openapi.json
            rm package.json
            rm package-lock.json
            rm generate-versions.js
      - add_ssh_keys:
          fingerprints:
            - '54:c2:42:9c:85:ee:a0:ba:7c:83:85:2f:79:b0:0a:7c'
      - run:
          name: Set Git user params
          command: |
            git config --global user.name $CIRCLE_USERNAME
            git config --global user.email "${CIRCLE_USERNAME}@users.noreply.github.com"
      - deploy:
          name: Commit and push docs changes
          command: |
            # add all generated and copied content to git
            git add .

            # commit with infos on the triggering task and branch
            # use [skip ci] to prevent CI from runnning on this branch as no CI is configured
            git commit -m "Automated REST API documentation update" \
                       -m "[ci skip] Circle CI build ${CIRCLE_BUILD_NUM}, see ${CIRCLE_BUILD_URL}" \
                       -m "Branch: ${CIRCLE_BRANCH}, commit: ${CIRCLE_SHA1}, tag:${CIRCLE_TAG-none}"

            # push changes to the Github Pages publishing branch on origin repos
            git push --set-upstream origin $BRANCH
            git push origin

workflows:
  circleci:
    jobs:
      - extractAPISpec
      - publishAPIDoc:
          filters:
            branches:
              only:
                - master
                - /^release-.*/
            tags: # stable doc is published only on tags to prevent confusion on the doc site.
              only: /.*/
          requires:
            - extractAPISpec
          context:
            - dockerhub-quorumengineering-ro
